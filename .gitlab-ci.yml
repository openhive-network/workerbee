stages:
  - .pre
  - build
  - test

variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  # uses registry.gitlab.syncad.com/hive/hive/ci-base-image:ubuntu22.04-8
  CI_BASE_IMAGE_TAG: "@sha256:e9f16040010ad24fffeabec66abca109b24baa79d912eba3118da58e8130fb26"
  CI_BASE_IMAGE: "registry.gitlab.syncad.com/hive/hive/ci-base-image${CI_BASE_IMAGE_TAG}"

include:
  - project: 'hive/common-ci-configuration'
    ref: 7c58303ffb61d91ef9662ec20e7b498bc6f62b8f
    file:
      - '/templates/wasm_build.gitlab-ci.yml'

image: "${CI_BASE_IMAGE}"

default:
  tags:
    - public-runner-docker

.configuration:
  tags:
    - public-runner-docker

lint:
  stage: .pre
  image: ${EMSCRIPTEN_IMAGE}
  before_script:
    - pnpm install
  script:
    - npm run lint
  tags:
    - public-runner-docker

build:
  stage: build
  image: ${EMSCRIPTEN_IMAGE}
  before_script:
    - pnpm install
  script:
    - npm run build
  artifacts:
    paths:
      - "$CI_PROJECT_DIR/dist"

    when: always
    expire_in: 1 week

  tags:
    - public-runner-docker

test:
  stage: test
  # emscripten image can be used as it contains all needed tools.
  image: ${EMSCRIPTEN_IMAGE}
  before_script:
    - pnpm install
  script:
    - npm run test
  needs:
    - job: build
      artifacts: true
  artifacts:
    reports:
      junit: results.xml
    paths:
      - "$CI_PROJECT_DIR/results.json"
  tags:
    - public-runner-docker
