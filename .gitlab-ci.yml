stages:
  - .pre
  - build
  - test
  - deploy

variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  # uses registry.gitlab.syncad.com/hive/hive/ci-base-image:ubuntu22.04-8
  CI_BASE_IMAGE_TAG: "@sha256:e9f16040010ad24fffeabec66abca109b24baa79d912eba3118da58e8130fb26"
  CI_BASE_IMAGE: "registry.gitlab.syncad.com/hive/hive/ci-base-image${CI_BASE_IMAGE_TAG}"
  # Deploy data
  NPM_TOKEN: $CI_JOB_TOKEN

include:
  - project: 'hive/common-ci-configuration'
    ref: 44d0cec8cfa8fb87d0daf5cef1485fb57b9e26fd
    file:
      - '/templates/wasm_build.gitlab-ci.yml'

image: "${CI_BASE_IMAGE}"

default:
  tags:
    - public-runner-docker

.configuration:
  tags:
    - public-runner-docker

lint:
  stage: .pre
  image: ${EMSCRIPTEN_IMAGE}
  before_script:
    - pnpm install
  script:
    - npm run lint
  tags:
    - public-runner-docker

build:
  stage: build
  extends: .npm_build_template
  variables:
    DIST_DIR: "$CI_PROJECT_DIR/dist"
    NPM_PACKAGE_SCOPE: "@hiveio"
    NPM_PACKAGE_NAME: "workerbee"
  artifacts:
    paths:
      - "$CI_PROJECT_DIR/dist/*.tgz"
      - "$CI_PROJECT_DIR/dist/bundle/web-full.*"

    when: always
    expire_in: 1 week

  tags:
    - public-runner-docker

test:
  stage: test
  # emscripten image can be used as it contains all needed tools.
  image: ${EMSCRIPTEN_IMAGE}
  before_script:
    - . "$NVM_DIR/nvm.sh"  # This loads nvm
    - tar -xf "$CI_PROJECT_DIR"/dist/hive-workerbee-*.tgz --strip-components=1
    - pnpm install
  script:
    - npm run test
  needs:
    - job: build
      artifacts: true
  artifacts:
    reports:
      junit: results.xml
    paths:
      - "$CI_PROJECT_DIR/results.json"
  tags:
    - public-runner-docker

deploy_dev_package:
  stage: deploy
  # emscripten image can be used as it contains all needed tools.
  image: ${EMSCRIPTEN_IMAGE}
  variables:
    PUBLISH_TOKEN: "$NPM_TOKEN"
    NPM_SCOPE: "@hiveio"
    NPM_REGISTRY: "gitlab.syncad.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/"

  script:
    - tar -xf "$CI_PROJECT_DIR"/dist/hive-workerbee-*.tgz --strip-components=1
    - scripts/bump_npm_version.sh "$PUBLISH_TOKEN" "$NPM_SCOPE" "$NPM_REGISTRY"
    - scripts/npm_publish.sh
  needs:
    - job: test
    - job: build
      artifacts: true

deploy_production_public_npm:
  stage: deploy
  # emscripten image can be used as it contains all needed tools.
  image: ${EMSCRIPTEN_IMAGE}
  variables:
    NPM_PUBLISH_TOKEN: "$INTERNAL_HIDDEN_PUBLISH_TOKEN"
    NPM_PACKAGE_NAME: "workerbee"
    PACKAGE_TGZ_PATH: "${BUILT_PACKAGE_PATH}"
  needs:
    - job: lint
    - job: test
    - job: build
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'
      when: manual
      allow_failure: true
